import React from 'react';
import {connect} from 'react-redux';

import {goBack} from "../store/router/actions";

import {
    Panel,
    PanelHeader,
    PanelHeaderBack,
    ContentCard,
    CardGrid
} from "@vkontakte/vkui";

class Travel extends React.Component {

    constructor(props) {
        super(props);

        this.state = {
            snackbar: null,
            loader: false,
        };
    }

    render() {
        const {id, goBack} = this.props;

        return (
            <Panel id={id}>
                <PanelHeader
                    left={<PanelHeaderBack onClick={() => goBack()}/>}
                >
                    Планирование
                </PanelHeader>

                <CardGrid size="l" style={{ marginTop: "20px", marginBottom: "30px"}}>
                    <ContentCard
                    disabled
                    header="Что нужно учесть, чтобы забронировать путешествие в 2021 году"
                    text="Знать, как спланировать поездку в 2019 году, и знать, как спланировать поездку в 2021, — совсем разные вещи. Раньше авиарейсы отменяли и переносили относительно редко. Теперь же отмена и задержка рейса стали куда более частым явлением — из-за того, что перевозчики адаптируются к новым правительственным ограничениям, закрытию границ и специфическому спросу."
                    maxheight={200}
                    />

                    <ContentCard
                    disabled
                    header="Выбирайте гибкие тарифы"
                    text="До пандемии невозвратные тарифы и рейсы строго на конкретную дату были верным способом сэкономить. Но для путешествий в 2021 году такой подход не годится, ведь планы меняются абсолютно неожиданно. Но несмотря на это, найти выгодные варианты можно. В чем секрет? В гибкости. При бронировании перелетов или жилья выбирайте предложения с щедрыми условиями отмены и изменения заказа. Тогда, если придется перенести поездку, вы не потеряете деньги."
                    maxheight={200}
                    />

                    <ContentCard
                    disabled
                    className="tw"
                    header="Следите за официальными ограничениями на поездки"
                    text={
                        "2020 показал нам, насколько быстро могут закрываться национальные и региональные границы. Поэтому прежде чем бронировать поездку, обязательно сверьтесь с актуальными рекомендациями на сайте местных властей — и того региона, где находитесь, и того, куда собираетесь. Зеленый свет нужен с обеих сторон.По мере того как подходит дата отправления, следите за обновлением правил и официальных ограничений, чтобы не заявиться в аэропорт к отмененному рейсу."
                    }
                    maxheight={200}
                    />

                    <ContentCard
                    disabled
                    header="Планируйте с учетом транзита и стоповеров"
                    text="У каждого направления свои правила для транзитных пассажиров. В некоторых аэропортах путешественники могут свободно перемещаться по транзитной зоне без специальных виз и карантинных ограничений. В других, наоборот, вас могут посадить на карантин или вообще запретить стоповеры и лейоверы. При бронировании путешествия учитывайте ограничения во всех транзитных точках на своем пути. Это особенно важно, если вы планируете отпуск в нескольких странах за раз."
                    maxheight={200}
                    />

                    <ContentCard
                    disabled
                    header="Куда можно поехать в 2021 году?"
                    text="Чтобы понимать, как планировать путешествие в 2021 году, нужно знать, куда можно отправиться. Вполне вероятно, что страны так и будут закрывать и открывать границы в течение долгих месяцев, но между государствами с похожей эпидобстановкой наверняка продолжат образовываться тревел-пузыри и коридоры. Вы можете посмотреть список интересных мест на вкладке «Путешествия»."
                    maxheight={200}
                    />
                </CardGrid>
            </Panel>
        );
    }

}

const mapDispatchToProps = {
    goBack
};

export default connect(null, mapDispatchToProps)(Travel);